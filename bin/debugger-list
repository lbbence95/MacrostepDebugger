#!/usr/bin/env python

#CLI functions related to infrastructure and node details, list.

import util.logger as mstep_logger
import argparse, logging

#Logger setup
logger = logging.getLogger('debugger_list')
logger.propagate = False
logger.setLevel(logging.INFO)

console_handler = logging.StreamHandler()
formatter = logging.Formatter('*** (%(asctime)s): %(message)s', "%Y-%m-%d %H:%M:%S")
console_handler.setFormatter(formatter)

logger.addHandler(console_handler)

#Options and suboptions
parser = argparse.ArgumentParser(description='Commands and options related to data display, listing.')
exclusive_group = parser.add_mutually_exclusive_group()
exclusive_sub_group = parser.add_argument_group()

#Option: application
exclusive_group.add_argument('-a','--applications', type=str, nargs='*', metavar='APP_NAME', help='show details of a given application')

#Option: infrastructure
exclusive_group.add_argument('-i', '--infrastructures', type=str, nargs='*', metavar='INSTANCE_ID', help='show details of a given application instance')

#Option: nodes
exclusive_sub_group.add_argument('-n','--nodes', type=str, nargs='*', metavar='NODE_ID', help='show details for a given process (node)')

#Argparse
args = parser.parse_args()

if __name__ == "__main__":
    #-a: Applications
    if (args.applications != None):

        # List all applications
        if ((len(args.applications) == 0)):
            mstep_logger.List_all_applications()

        #List one application
        elif (len(args.applications) > 0):
            mstep_logger.List_one_application(args.applications[0])

    #-i and -n: Infrastructures and nodes
    elif (args.infrastructures != None):

        #List all infrastructures
        if (len(args.infrastructures) == 0):
            mstep_logger.List_all_infras()

        #List one infrastructure
        elif (len(args.infrastructures) > 0):
            
            #List one infrastructure
            if (args.nodes != None):

                #List one infrastructure
                if (len(args.nodes) == 0):
                    mstep_logger.Print_infrastructure_details(args.infrastructures[0])

                #List one infrastructure and a node
                elif (len(args.nodes) > 0):
                    mstep_logger.Print_node_details(args.infrastructures[0], args.nodes[0])

            #List only one infrastructure
            else:
                mstep_logger.Print_infrastructure_details(args.infrastructures[0])